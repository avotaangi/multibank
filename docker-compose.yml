version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: multibank-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: multibank
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./server/scripts/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - multibank-network

  # Backend API
  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: multibank-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/multibank?authSource=admin
      JWT_SECRET: your-super-secret-jwt-key-here
      JWT_EXPIRES_IN: 7d
      PORT: 3001
      TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN}
      TELEGRAM_WEBHOOK_URL: https://your-domain.com/api/telegram/webhook
      BCRYPT_ROUNDS: 12
      RATE_LIMIT_WINDOW_MS: 900000
      RATE_LIMIT_MAX_REQUESTS: 100
      ALLOWED_ORIGINS: https://your-domain.com
    ports:
      - "3001:3001"
    depends_on:
      - mongodb
    networks:
      - multibank-network
    volumes:
      - ./server/logs:/app/logs

  # Frontend
  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: multibank-frontend
    restart: unless-stopped
    environment:
      VITE_API_URL: https://your-domain.com/api
      VITE_TELEGRAM_BOT_USERNAME: ${TELEGRAM_BOT_USERNAME}
      VITE_TELEGRAM_WEBAPP_URL: https://your-domain.com
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
    networks:
      - multibank-network

  # Telegram Bot (Optional)
  telegram-bot:
    build:
      context: ./telegram-bot
      dockerfile: Dockerfile
    container_name: multibank-telegram-bot
    restart: unless-stopped
    environment:
      NODE_ENV: production
      TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN}
      TELEGRAM_BOT_USERNAME: ${TELEGRAM_BOT_USERNAME}
      API_URL: http://backend:3001/api
      WEBAPP_URL: https://your-domain.com
    depends_on:
      - backend
    networks:
      - multibank-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: multibank-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - multibank-network

volumes:
  mongodb_data:

networks:
  multibank-network:
    driver: bridge
