const https = require('https');

const BOT_TOKEN = process.env.TELEGRAM_BOT_TOKEN || '8226697395:AAGp98RUQfJo-sLL-OaH0wwXtIdjeeaCs8A';
const WEBAPP_URL = 'https://nonacquiescing-ungovernmentally-paz.ngrok-free.app';

if (!BOT_TOKEN) {
  console.log('‚ùå –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ TELEGRAM_BOT_TOKEN –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è');
  process.exit(1);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–ø—Ä–æ—Å–∞ –∫ Telegram Bot API
const sendTelegramRequest = (method, data = {}) => {
  return new Promise((resolve, reject) => {
    const postData = JSON.stringify(data);
    
    const options = {
      hostname: 'api.telegram.org',
      port: 443,
      path: `/bot${BOT_TOKEN}/${method}`,
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Content-Length': Buffer.byteLength(postData)
      }
    };
    
    const req = https.request(options, (res) => {
      let responseData = '';
      
      res.on('data', (chunk) => {
        responseData += chunk;
      });
      
      res.on('end', () => {
        try {
          const result = JSON.parse(responseData);
          resolve(result);
        } catch (error) {
          reject(error);
        }
      });
    });
    
    req.on('error', (error) => {
      reject(error);
    });
    
    req.write(postData);
    req.end();
  });
};

// –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–æ—Ç–µ
const getBotInfo = async () => {
  try {
    console.log('ü§ñ –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ...');
    const result = await sendTelegramRequest('getMe');
    
    if (result.ok) {
      console.log('‚úÖ –ë–æ—Ç –Ω–∞–π–¥–µ–Ω:', result.result.first_name);
      console.log('üì± Username:', result.result.username);
      return result.result;
    } else {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–æ—Ç–µ:', result.description);
      return null;
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
    return null;
  }
};

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Web App
const setupWebApp = async () => {
  try {
    console.log('üåê –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Web App...');
    console.log('üì± URL:', WEBAPP_URL);
    
    const result = await sendTelegramRequest('setWebhook', {
      url: `${WEBAPP_URL}/api/telegram/webhook`
    });
    
    if (result.ok) {
      console.log('‚úÖ Webhook –Ω–∞—Å—Ç—Ä–æ–µ–Ω —É—Å–ø–µ—à–Ω–æ');
    } else {
      console.error('‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ webhook:', result.description);
    }
    
    return result;
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
    throw error;
  }
};

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
const main = async () => {
  try {
    console.log('üöÄ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Telegram Web App –¥–ª—è MultiBank\n');
    
    // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ
    const botInfo = await getBotInfo();
    if (!botInfo) {
      process.exit(1);
    }
    
    console.log('\nüìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Web App –≤ BotFather:\n');
    
    console.log('1Ô∏è‚É£ –û—Ç–∫—Ä–æ–π—Ç–µ @BotFather –≤ Telegram');
    console.log('2Ô∏è‚É£ –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /newapp');
    console.log('3Ô∏è‚É£ –í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à–µ–≥–æ –±–æ—Ç–∞:', botInfo.username);
    console.log('4Ô∏è‚É£ –ù–∞—Å—Ç—Ä–æ–π—Ç–µ Web App:');
    console.log('   ‚Ä¢ –ù–∞–∑–≤–∞–Ω–∏–µ: MultiBank');
    console.log('   ‚Ä¢ –û–ø–∏—Å–∞–Ω–∏–µ: –ú—É–ª—å—Ç–∏–±–∞–Ω–∫ - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å—á–µ—Ç–∞–º–∏ –∏ –ø–µ—Ä–µ–≤–æ–¥–∞–º–∏');
    console.log('   ‚Ä¢ Web App URL:', WEBAPP_URL);
    console.log('   ‚Ä¢ –ö–æ—Ä–æ—Ç–∫–æ–µ –∏–º—è: multibank');
    
    console.log('\n5Ô∏è‚É£ –ü–æ—Å–ª–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ —Å—Å—ã–ª–∫—É:');
    console.log(`   https://t.me/${botInfo.username}/multibank`);
    
    console.log('\nüéâ –ì–æ—Ç–æ–≤–æ! –û—Ç–∫—Ä–æ–π—Ç–µ —Å—Å—ã–ª–∫—É –≤ Telegram –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è!');
    
    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º webhook
    await setupWebApp();
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:', error.message);
    process.exit(1);
  }
};

main();
