const { execSync } = require('child_process');
const fs = require('fs');
const path = require('path');

console.log('üöÄ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ MultiBank –Ω–∞ Vercel...\n');

// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏ Vercel CLI
const checkVercelCLI = () => {
  try {
    execSync('vercel --version', { stdio: 'pipe' });
    return true;
  } catch (error) {
    return false;
  }
};

// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Vercel CLI
const installVercelCLI = () => {
  console.log('üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Vercel CLI...');
  try {
    execSync('npm install -g vercel', { stdio: 'inherit' });
    console.log('‚úÖ Vercel CLI —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
    return true;
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Vercel CLI:', error.message);
    return false;
  }
};

// –°–æ–∑–¥–∞–µ–º .vercelignore
const createVercelIgnore = () => {
  const vercelIgnore = `node_modules
server
scripts
*.md
.env
.env.local
.env.development.local
.env.test.local
.env.production.local
ssl
telegram-bot
docker-compose.yml
Dockerfile
nginx.conf
`;

  fs.writeFileSync('.vercelignore', vercelIgnore);
  console.log('‚úÖ –°–æ–∑–¥–∞–Ω .vercelignore');
};

// –°–æ–∑–¥–∞–µ–º package.json –¥–ª—è –∫–æ—Ä–Ω—è –ø—Ä–æ–µ–∫—Ç–∞
const createRootPackageJson = () => {
  const packageJson = {
    "name": "multibank",
    "version": "1.0.0",
    "description": "MultiBank - Telegram Web App",
    "scripts": {
      "build": "cd client && npm run build",
      "dev": "cd client && npm run dev",
      "deploy": "vercel --prod"
    },
    "devDependencies": {
      "vercel": "^32.0.0"
    }
  };

  fs.writeFileSync('package.json', JSON.stringify(packageJson, null, 2));
  console.log('‚úÖ –°–æ–∑–¥–∞–Ω –∫–æ—Ä–Ω–µ–≤–æ–π package.json');
};

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
const main = async () => {
  try {
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º Vercel CLI...');
    
    if (!checkVercelCLI()) {
      console.log('‚ùå Vercel CLI –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
      if (!installVercelCLI()) {
        process.exit(1);
      }
    } else {
      console.log('‚úÖ Vercel CLI –Ω–∞–π–¥–µ–Ω');
    }

    console.log('\nüìÅ –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–æ–µ–∫—Ç...');
    createVercelIgnore();
    createRootPackageJson();

    console.log('\nüèóÔ∏è –°–æ–±–∏—Ä–∞–µ–º –ø—Ä–æ–µ–∫—Ç...');
    execSync('cd client && npm run build', { stdio: 'inherit' });

    console.log('\nüöÄ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–µ–º –Ω–∞ Vercel...');
    console.log('üìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏:');
    console.log('1. –í—ã–ø–æ–ª–Ω–∏—Ç–µ: vercel login');
    console.log('2. –í—ã–ø–æ–ª–Ω–∏—Ç–µ: vercel --prod');
    console.log('3. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã–π URL');
    console.log('4. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ Telegram Web App —Å —ç—Ç–∏–º URL');

    console.log('\nüéâ –ì–æ—Ç–æ–≤–æ! –°–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º –≤—ã—à–µ.');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
    process.exit(1);
  }
};

main();
